import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as s,c as d,b as e,d as t,e as r,f as a}from"./app-BK07oOkr.js";const l="/assets/img_9-DY7d06zG.png",c="/assets/img_10-CjjrCAPo.png",h={},p=e("p",null,[t("为了维护项目的代码质量，项目中内置了格式化代码的工具 "),e("code",null,"Prettier"),t(" 和代码检测质量检查工具 "),e("code",null,"ESlint"),t("。")],-1),u=e("p",null,"同时，也推荐您在开发过程中遵循提交规范，以保持项目仓库的分支、提交信息的清晰整洁。",-1),_=e("h2",{id:"代码编写规范",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#代码编写规范","aria-hidden":"true"},"#"),t(" 代码编写规范")],-1),m=e("h3",{id:"prettier-配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prettier-配置","aria-hidden":"true"},"#"),t(" Prettier 配置")],-1),f={href:"https://prettier.io/docs/en/",target:"_blank",rel:"noopener noreferrer"},b=a('<h4 id="webstorm" tabindex="-1"><a class="header-anchor" href="#webstorm" aria-hidden="true">#</a> WebStorm</h4><p>配置参数如图</p><figure><img src="'+l+'" alt="配置参数" tabindex="0" loading="lazy"><figcaption>配置参数</figcaption></figure><h4 id="visual-studio-code" tabindex="-1"><a class="header-anchor" href="#visual-studio-code" aria-hidden="true">#</a> Visual Studio Code</h4>',4),g={href:"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode",target:"_blank",rel:"noopener noreferrer"},v={href:"https://marketplace.visualstudio.com/items?itemName=tombonnike.vscode-status-bar-format-toggle",target:"_blank",rel:"noopener noreferrer"},S=a('<h3 id="eslint-配置" tabindex="-1"><a class="header-anchor" href="#eslint-配置" aria-hidden="true">#</a> Eslint 配置</h3><p>ESLint 是一个根据方案识别并报告 ECMAScript/JavaScript 代码问题的工具，其目的是使代码风格更加一致并避免错误。在很多地方它都与 JSLint 和 JSHint 类似。</p><h4 id="webstorm-1" tabindex="-1"><a class="header-anchor" href="#webstorm-1" aria-hidden="true">#</a> WebStorm</h4><blockquote><p>默认情况下，ESLint 处于禁用状态。您可以选择自动配置它或手动指定所有配置设置。</p></blockquote><ul><li>自动配置 ESLint</li></ul><p>WebStorm 使用项目node_modules文件夹中的 ESLint 包和存储当前文件的文件夹中的 .eslintrc.* 配置文件。如果在当前文件夹中找不到 .eslintrc.*，WebStorm 将在其父文件夹中查找一个，直到项目根目录。</p><p>如果将 ESLint 列为依赖项的多个package.json文件，WebStorm 会为每个package.json启动一个单独的进程，并处理其下的所有内容。这允许您将特定的 ESLint 版本或一组特定的插件应用于 monorepo 或具有多个 ESLint 配置的项目中的每个路径。</p><figure><img src="'+c+'" alt="配置参数" tabindex="0" loading="lazy"><figcaption>配置参数</figcaption></figure><h4 id="visual-studio-code-1" tabindex="-1"><a class="header-anchor" href="#visual-studio-code-1" aria-hidden="true">#</a> Visual Studio Code</h4>',9),k={href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint",target:"_blank",rel:"noopener noreferrer"},x=a('<h2 id="分支规范" tabindex="-1"><a class="header-anchor" href="#分支规范" aria-hidden="true">#</a> 分支规范</h2><ul><li>主干分支 -- develop</li><li>功能分支 -- feature</li><li>修复分支 -- hotfix</li></ul><p><code>develop</code>分支只接受通过 <code>Merge Request</code> 合入功能分支。</p><p>为保证提交的记录干净整洁，其他分支合入之前需要先 <code>rebase develop</code> 分支。</p><p>分支命名规则：<code>feature/20210401_</code>功能名称。</p>',5);function E(L,C){const o=n("ExternalLinkIcon");return s(),d("div",null,[p,u,_,m,e("p",null,[e("a",f,[t("Prettier"),r(o)]),t(" 是一个代码格式化程序,它删除所有原始样式，并确保所有输出的代码都符合一致的样式。")]),b,e("p",null,[t("官方插件："),e("a",g,[t("Prettier - Code formatter"),r(o)])]),e("blockquote",null,[e("p",null,[t("如果要打开和关闭格式化程序，请安装"),e("a",v,[t("vscode-status-bar-format-toggle"),r(o)])])]),S,e("p",null,[t("官方插件："),e("a",k,[t("vscode-eslint"),r(o)])]),x])}const P=i(h,[["render",E],["__file","dev.html.vue"]]);export{P as default};
